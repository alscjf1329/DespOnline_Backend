name: cicd
run-name: ${{ github.actor }} is building with gradle
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

permissions: write-all

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: get code from remote repository
        uses: actions/checkout@v4

      - name: setup jdk 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: make application.properties
        run:
          mkdir ./src/main/resources |
          touch ./src/main/resources/application.properties
        shell: bash

      - name: deliver application.properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Copy build file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "build/libs/*.jar"
          target: "source"
          rm: true

  CD:
    needs: CI
    runs-on: ubuntu-latest

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "#### Enter the test-was section ####"
            screen -R test-was
            
            SOURCE_DIR=source/build/libs
            FILE_NAME=`find $SOURCE_DIR/*.jar -printf "%f\n"`
            PID=`ps -ef | grep desp_backend | grep -v "bash -c" | awk '{print $2}'`
            LOG_FILE="/path/to/logfile_$(date +"%Y%m%d_%H%M%S").log"

            if [ -z "$PID" ]; then
                    echo "#### THERE IS NO PROCESS ####"
            else
                    echo "#### KILL $PID ####"
                    kill $PID
            fi

            echo "#### RUN $SOURCE_DIR/$FILE_NAME ####"
            
            java -jar $SOURCE_DIR/$FILE_NAME "$LOG_FILE" 2>&1 &